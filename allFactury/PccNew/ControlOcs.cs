using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;
using WZYB.Model;
using WZYB.BLL;

namespace PccNew
{
    public  class ControlOcs
    {
        #region ocs
        /// <summary>
        /// 悬挂小车数量
        /// </summary>
        public int ocsCarCount = 1;
        /// <summary>
        /// 悬挂小车速度
        /// </summary>
        public float ocsSpeed = 0.05f;
        /// <summary>
        /// 悬挂小车起始位置
        /// </summary>
        public float ocsStartPos = 0.01f;
        /// <summary>
        /// 悬挂小车车身宽度
        /// </summary>
        public float ocsCarWidth = 1.1f;
        /// <summary>
        /// 悬挂小车线程
        /// </summary>
       // public Thread[] ocsThread;
        /// <summary>
        /// 悬挂小车位置
        /// </summary>
        public float[] ocsCarPos;
        /// <summary>
        /// 悬挂小车缓存数据
        /// </summary>
        public List<OCSStatus> ocsModelList = new List<OCSStatus>();
        /// <summary>
        /// 悬挂小车线程刷新时间
        /// </summary>
        public int ocsThreadTime = 300;
        /// <summary>
        /// 悬挂线体长度
        /// </summary>
        public string[,] ocsLineLength = { { "B2011", "5.65819" }, { "B2021", "5.83319" }, { "B2031", "5.83319" }, { "B2041", "5.83319" }, { "B2051", "5.83319" }, { "B2061", "5.83319" }, { "B2071", "5.83319" }, { "B2081", "5.83319" }, { "B2091", "5.83319" }, { "B2101", "5.83319" }
                                          , { "B2111", "5.83319" }, { "B2121", "5.83319" }, { "B2131", "5.83319" }, { "B2141", "5.83319" }, { "B2151", "5.83319" }, { "B2161", "5.83319" }, { "B2171", "5.83319" }, { "B2181", "5.83319" }, { "B2172", "6.06394" }, { "B1060", "11.7471" }
                                          , { "B1020", "6.3" }, { "B1030", "6.3" }, { "B1040", "6" }, { "B1080", "10" }, { "B1070", "11" }, { "B2182", "6.06394" }, { "B2012", "6.06394" }, { "B2022", "6.06394" }, { "B2032", "6.06394" }, { "B2042", "6.06394" }, { "B2052", "6.06394" }
                                          , { "B2062", "6.06394" }, { "B2072", "6.06394" }, { "B2082", "6.06394" }, { "B2092", "6.06394" }, { "B2102", "6.06394" }, { "B2112", "6.06394" }, { "B2122", "6.06394" }, { "B2132", "6.06394" }, { "B2142", "6.06394" }, { "B2152", "6.06394" }
                                          , { "B2162", "6.06394" }, { "B1120", "3.41372" }, { "B1150", "4.67788" }, { "B1010", "2" }, { "B1090", "2.5" }, { "B1100", "2" }, { "B1110", "8.2" }, { "B1180", "4.3" }, { "B1170", "2.5" }, { "B1160", "2" }, { "B1140", "4.4" }
                                          , { "B1130", "2.4" }, { "B1191", "2.64248" }, { "B1201", "8.5" }, { "B1211", "10.7" }, { "B1221", "7" }, { "B1231", "7" }, { "B1241", "8.3" }, { "B1251", "7" }, { "B1050", "4.14248" }
                                          , { "A2210", "5.52644" }, { "A2310", "5.52644" }, { "A2410", "5.52644" }, { "A2510", "5.52644" }, { "A2610", "5.52644" }, { "A2710", "5.52644" }, { "A2810", "5.52644" }, { "A2910", "5.52644" }, { "A2110", "5.52644" }, { "A3110", "5.52644" }
                                          , { "A3910", "5.52644" }, { "A3810", "5.52644" }, { "A3710", "5.52644" }, { "A3610", "5.52644" }, { "A3510", "5.52644" }, { "A3410", "5.52644" }, { "A3310", "5.52644" }, { "A3210", "5.52644" }, { "A1110", "11.5" }, { "A1120", "8.3" }
                                          , { "A1130", "8.3" }, { "A1140", "5.7854" }, { "A1150", "2" }, { "A1160", "4.9208" }, { "A1170", "14.9354" }, { "A1180", "13" }, { "A1100", "5.85642" }, { "A1020", "13.7708" }, { "A1030", "10.2" }, { "A1040", "8.2" }, { "A1050", "9" }
                                          , { "A1060", "4.94248" }, { "A1070", "2" }, { "A1080", "1.94248" }, { "A1090", "4.8854" }, { "A1010", "2" }
                                          , { "C1390", "4.19204" }, { "C1130", "13" }, { "C1120", "14" }, { "C1110", "7" }, { "C1100", "2.2" }, { "C2820", "2.5" }, { "C2810", "3.3354" }, { "C1090", "6" }, { "C1080", "2.5" }, { "C1140", "4.68076" }, { "C1150", "5" }, { "C1160", "2.5" }
                                          , { "C1170", "6" }, { "C1180", "17" }, { "C1190", "3" }, { "C1200", "10" }, { "C1210", "2.5" }, { "C1360", "11" }, { "C1370", "11" }, { "C1380", "14.7425" }, { "C1350", "5" }, { "C1340", "3" }, { "C1330", "4" }, { "C1320", "4" }
                                          , { "C1310", "3" }, { "C1300", "3" }, { "C1290", "3" }, { "C1280", "3" }, { "C1270", "3" }, { "C1260", "3" }, { "C1250", "3" }, { "C1240", "2" }, { "C1230", "2" }, { "C1220", "1" }, { "C1070", "4.50642" }, { "C1060", "1" }, { "C1050", "5.7" }
                                          , { "C1040", "4.3" }, { "C1030", "12" }, { "C1020", "12.3" }, { "C1010", "3" }, { "C2710", "2.85321" }, { "C2610", "2.85321" }, { "C2510", "2.85321" }, { "C2410", "2.85321" }, { "C2310", "2.85321" }, { "C2210", "2.85321" }, { "C2110", "2.85321" }
                                          , { "C1410", "2.1927" }};

        /// <summary>
        /// 悬挂小车路线
        /// </summary>
        public string[] ocsPath = { "",
                                "2,54,1",
                                "2,54,1",
                                "3,53,54,1,6",
                                "3,53,54,1,6",
                                "4,52,53,54,1,6",
                                "4,52,53,54,1,6",
                                "5,51,52,53,54,1,6,7",
                                "5,51,52,53,54,1,6,7",
                                "10,50,51,52,53,54,1,6,7,8,9",
                                "10,50,51,52,53,54,1,6,7,8,9",
                                "12,49,50,51,52,53,54,1,6,7,8,9,11",
                                "12,49,50,51,52,53,54,1,6,7,8,9,11",
                                "14,48,49,50,51,52,53,54,1,6,7,8,9,11,13",
                                "14,48,49,50,51,52,53,54,1,6,7,8,9,11,13",
                                "16,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15",
                                "16,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15",
                                "18,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17",
                                "18,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17",
                                "20,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19",
                                "20,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19",
                                "22,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21",
                                "22,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21",
                                "24,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23",
                                "24,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23",
                                "26,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25",
                                "26,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25",
                                "28,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27",
                                "28,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27",
                                "30,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29",
                                "30,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29",
                                "32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31",
                                "32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31",
                                "34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31,33",
                                "34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31,33",
                                "36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31,33,35",
                                "36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31,33,35",
                                "1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54", 
                                "1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,19,21,23,25,27,29,30,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,19,21,23,25,27,28,41,42,43,44,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,19,21,23,25,26,42,43,44,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,19,21,23,24,43,44,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,19,21,22,44,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,19,20,45,46,47,48,49,50,51,52,53,54",
                                "1,6,7,8,9,11,13,15,17,18,46,47,48,49,50,51,52,53,54",
                                };

        /// <summary>
        /// 悬挂小车临时数据
        /// </summary>
        public int[] ocsTempLine;

        #endregion
        public bool IsStart = false;
        public int handle = 1;

        public ControlOcs()
        {
            ocsCarPos = new float[ocsCarCount + 1];
            //ocsThread = new Thread[ocsCarCount];
            ocsTempLine = new int[ocsCarCount + 1];

            GetIdex.SetOCSPathLengthSetCache(ocsLineLength);
        }
        public void OcsThreadFunc(object o)
        {
            try
            {
                int index = Convert.ToInt32(o);
                bool isF = true;

                while (true)
                {
                    if (IsStart)
                    {

                        //数据库最新数据
                        OCSStatus model = OCSStatusBLL.GetModel(index);

                        if (isF)
                        {
                            ocsCarPos[index] = 0.01f;
                            isF = false;
                        }
                        else
                        {
                            if (model.position == -1)
                            {
                                //内存数据
                                //OCSStatus oldModel = ocsModelList.Find(s => s.carId == index);
                                int i = ocsModelList.FindIndex(s => s.carId == index);

                                //初始
                                if (i == -1)
                                {
                                    int count = OCSStatusBLL.getCountByLine(model.line);

                                    ocsCarPos[index] = (count - model.sequence) * ocsCarWidth + ocsStartPos;
                                    ocsModelList.Add(model);
                                }
                                else
                                {
                                    //驱动段改变
                                    if (ocsModelList[i].line != model.line)
                                    {
                                        if (model.direction == 1)
                                            ocsCarPos[index] = ocsStartPos;
                                        else
                                            ocsCarPos[index] = GetIdex.getOCSPathLength(model.line) - ocsStartPos;
                                    }
                                    else
                                    {
                                        if (model.direction == 1)
                                            ocsCarPos[index] += ocsSpeed;
                                        else if (model.direction == 2)
                                            ocsCarPos[index] -= ocsSpeed;
                                    }

                                    ocsModelList[i] = model;
                                }
                            }
                            else
                            {
                                ocsCarPos[index] = float.Parse(model.position.ToString());
                            }
                        }

                        //设定位置
                        int index1 = GetIdex.getDicOutputIndex("vehicle" + index.ToString("000") + "01_input_Pos");
                        ComTCPLib.SetOutputAsREAL32(handle, index1, float.Parse(ocsCarPos[index].ToString()));

                        //设定驱动段
                        index1 = GetIdex.getDicOutputIndex("vehicle" + index.ToString("000") + "01_input_Path");
                        ComTCPLib.SetOutputAsINT(handle, index1, int.Parse(model.line.Substring(1)));

                        //设定区域
                        int tmpArea = 0;
                        if (model.line.Substring(0, 1).ToLower() == "a")
                            tmpArea = 1;
                        else if (model.line.Substring(0, 1).ToLower() == "b")
                            tmpArea = 2;
                        else if (model.line.Substring(0, 1).ToLower() == "c")
                            tmpArea = 3;

                        index1 = GetIdex.getDicOutputIndex("vehicle" + index.ToString("000") + "01_input_Area");
                        ComTCPLib.SetOutputAsINT(handle, index1, tmpArea);

                        //设定是否显示阀体
                        index1 = GetIdex.getDicOutputIndex("vehicle" + index.ToString("000") + "01_input_Ftv");
                        ComTCPLib.SetOutputAsINT(handle, index1, 1);
                    }

                    Thread.Sleep(ocsThreadTime);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        


    }
}
